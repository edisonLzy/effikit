---
description: 
globs: 
alwaysApply: true
---
# Chrome 扩展开发规范

## **技术栈**

### Extension.js 框架
- **使用 Extension.js 作为开发框架**
  - 跨浏览器兼容 (Chrome/Firefox)
  - 自动处理 Manifest V2/V3
  - 热重载开发体验
  - 现代构建工具链支持

### React + TypeScript
- **UI 开发使用 React 18 + TypeScript**
  - 严格类型检查
  - React StrictMode
  - 函数式组件优先

### shadcn/ui + Tailwind CSS
- **UI 组件系统**
  - shadcn/ui 组件库
  - Tailwind CSS 样式
  - Lucide 图标库

## **项目结构**

```
├── manifest.json          # 扩展配置
├── background.ts         # 后台脚本
├── sidebar/              # 侧边栏组件
│   ├── index.html       # HTML 入口
│   ├── scripts.tsx      # React 渲染入口
│   ├── SidebarApp.tsx   # 主组件
│   └── styles.css       # Tailwind 样式
├── components/ui/        # shadcn/ui 组件
├── lib/utils.ts         # 工具函数
└── images/              # 图标资源
```

## **跨浏览器配置**

### Manifest 配置
```json
{
  "chromium:manifest_version": 3,
  "firefox:manifest_version": 2,
  "chromium:action": {
    "default_icon": { "48": "images/extension_48.png" }
  },
  "firefox:browser_action": {
    "default_icon": { "48": "images/extension_48.png" }
  },
  "chromium:side_panel": {
    "default_path": "sidebar/index.html"
  },
  "firefox:sidebar_action": {
    "default_panel": "sidebar/index.html"
  },
  "background": {
    "chromium:service_worker": "background.ts",
    "firefox:scripts": ["background.ts"]
  }
}
```

## **开发规范**

### 包管理
- **严格使用 pnpm 管理依赖**
- 禁止使用 npm 或 yarn
- 维护 pnpm-lock.yaml

### 代码质量
- ESLint + TypeScript 检查
- Husky + lint-staged 提交检查
- 统一代码格式
- 严格模式 TypeScript 配置

### React 组件入口
```tsx
// sidebar/scripts.tsx
import React from 'react';
import ReactDOM from 'react-dom/client';
import SidebarApp from './SidebarApp';
import './styles.css';

const root = ReactDOM.createRoot(document.getElementById('root')!);
root.render(
  <React.StrictMode>
    <SidebarApp />
  </React.StrictMode>
);
```

### 组件开发
```tsx
// 使用 shadcn/ui 组件
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import { Switch } from '@/components/ui/switch';
import { Label } from '@/components/ui/label';

export default function SidebarApp() {
  return (
    <Card className="h-full">
      <CardHeader>
        <CardTitle>Welcome to your shadcn Extension</CardTitle>
        <CardDescription>Manage your settings here</CardDescription>
      </CardHeader>
      <CardContent className="grid gap-6">
        <div className="flex items-center justify-between space-x-4">
          <Label htmlFor="setting" className="flex flex-col space-y-1">
            <span>设置项目</span>
            <span className="text-xs font-normal leading-snug text-muted-foreground">
              设置项的详细描述
            </span>
          </Label>
          <Switch id="setting" />
        </div>
      </CardContent>
    </Card>
  );
}
```

### Chrome API 使用
```typescript
// background.ts - Side Panel API
chrome.action.onClicked.addListener(() => {
  chrome.sidePanel.setPanelBehavior({ openPanelOnActionClick: true });
});
```

### 工具函数
```typescript
// lib/utils.ts - 类名合并工具
import { clsx, type ClassValue } from 'clsx';
import { twMerge } from 'tailwind-merge';

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}
```

### shadcn/ui 配置
```json
// components.json
{
  "style": "new-york",
  "rsc": false,
  "tsx": true,
  "tailwind": {
    "css": "sidebar/styles.css",
    "baseColor": "neutral",
    "cssVariables": true
  },
  "aliases": {
    "components": "@/components",
    "utils": "@/lib/utils"
  },
  "iconLibrary": "lucide"
}
```

## **最佳实践**

### 权限管理
- 最小权限原则
- 明确声明所需权限
```json
{
  "chromium:permissions": ["sidePanel"],
  "firefox:permissions": ["tabs"]
}
```

### 性能优化
- React.memo 优化重渲染
- 合理使用 useCallback/useMemo
- 资源压缩和优化
- 避免内存泄漏

### 安全性
- 严格的 CSP 配置
- 安全的数据处理
- 防止 XSS 攻击
- 安全的跨域请求处理

### 可访问性
- ARIA 标签支持
- 键盘导航
- 语义化 HTML
- 适当的颜色对比度

### 样式规范
- 使用 Tailwind CSS 工具类
- 通过 cn() 函数合并类名
- 遵循 shadcn/ui 设计系统
- 响应式设计支持

### 错误处理
```tsx
// 错误边界组件
class ErrorBoundary extends React.Component {
  componentDidCatch(error, errorInfo) {
    console.error('Extension Error:', error, errorInfo);
  }
  
  render() {
    if (this.state?.hasError) {
      return <div>Something went wrong.</div>;
    }
    return this.props.children;
  }
}
```

### 版本管理
- 保持 package.json 和 manifest.json 版本同步
- 遵循语义化版本控制
- 提供清晰的更新日志

## **开发命令**

```bash
# 开发模式
pnpm dev

# 构建生产版本
pnpm build

# 启动扩展
pnpm start

# 代码检查
pnpm lint

# 代码格式化
pnpm lint:fix
```

## **调试和测试**

### 开发调试
- 使用 Chrome DevTools Extension 面板
- 利用 Extension.js 热重载功能
- console.log 调试信息
- 检查扩展错误页面

### 跨浏览器测试
- Chrome 扩展测试
- Firefox 附加组件测试
- 权限和 API 兼容性验证

## **部署发布**

### 构建准备
- 生产环境构建
- 资源文件优化
- 图标和截图准备
- 隐私政策文档

### 商店发布
- Chrome Web Store 发布流程
- Firefox Add-ons 发布流程
- 版本更新和维护

---

**参考资源**
- [Extension.js 官方文档](mdc:https:/extension.js.org)
- [Chrome Extensions 开发指南](mdc:https:/developer.chrome.com/docs/extensions)
- [shadcn/ui 组件库](mdc:https:/ui.shadcn.com)
- [Tailwind CSS 文档](mdc:https:/tailwindcss.com)
