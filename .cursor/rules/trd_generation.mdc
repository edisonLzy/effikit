---
description: 
globs: 
alwaysApply: false
---
# TRD 文档生成规范

## **文档结构标准**

### **必需章节结构**
```markdown
# Task X - [任务名称] 技术需求文档 (TRD)

## 1. 概述
### 1.1 任务描述
### 1.2 技术目标

## 2. 技术架构
### 2.1 技术栈
### 2.2 组件架构
### 2.3 数据模型

## 3. 功能需求
### 3.1 [核心功能1]
### 3.2 [核心功能2]
### 3.3 [核心功能3]

## 4. 页面布局设计（如适用）
### 4.1 整体布局结构
### 4.2 布局规格
### 4.3 响应式设计

## 5. 技术实现
### 5.1 核心组件实现
### 5.2 状态管理
### 5.3 [特定技术实现]

## 6. 性能优化
## 7. 用户体验
## 8. 测试策略
## 9. 安全考虑
```

## **技术栈规范**

### **Chrome 扩展项目技术栈**
- **前端框架**: React 18 + TypeScript
- **路由管理**: React Router DOM (MemoryRouter) - 适用于需要路由的任务
- **UI 组件库**: shadcn/ui + Radix UI
- **样式系统**: Tailwind CSS
- **图标库**: Lucide React
- **构建工具**: Extension.js
- **状态管理**: React Hooks (useState, useEffect)
- **存储**: Chrome Extension Storage API

## **数据模型规范**

### **基础接口定义**
```typescript
// 主要实体接口
interface [EntityName] {
  id: string; // 使用 string 类型 ID
  name: string;
  description: string;
  enabled: boolean;
  icon: LucideIcon;
  // 其他特定字段
}

// 设置接口
interface [EntityName]Settings {
  [key: string]: boolean | string | number;
}

// 状态接口
interface [StateName] {
  // 状态字段定义
}
```

## **功能需求描述规范**

### **功能描述格式**
- **功能名称**: 简洁描述功能作用
- **实现细节**: 具体的实现要求
- **用户交互**: 用户如何使用该功能
- **技术要求**: 特定的技术实现要求

### **路由功能要求**（如适用）
- **MemoryRouter**: 使用内存路由，适合 Chrome 扩展环境
- **路由结构**: 每个主要功能对应独立路由页面
- **路由导航**: 支持前进、后退、直接跳转
- **深度链接**: 支持直接访问特定页面

## **页面布局设计规范**

### **布局描述要求**
- 提供 ASCII 艺术图展示布局结构
- 明确各区域的尺寸比例
- 定义组件间距和内边距
- 提供 CSS 样式示例

### **响应式设计要求**
- 适配侧边栏宽度变化
- 支持触摸友好的交互
- 考虑字体缩放支持

## **技术实现规范**

### **组件实现要求**
```typescript
// 组件接口定义格式
interface [ComponentName]Props {
  // 必需属性
  requiredProp: Type;
  // 可选属性
  optionalProp?: Type;
  // 回调函数
  onAction: (param: Type) => void;
}

// 功能特性注释格式
// 功能特性:
// - 特性1: 具体描述
// - 特性2: 具体描述
// - 特性3: 具体描述
```

### **状态管理要求**
- 使用 React Hooks 进行状态管理
- 区分本地状态和持久化状态
- 提供 Chrome Storage API 集成示例
- 包含路由状态管理（如适用）

## **性能优化要求**

### **搜索优化**（如适用）
- **防抖处理**: 减少搜索频率
- **结果缓存**: 缓存搜索结果
- **增量搜索**: 基于上次结果进行过滤

## **测试策略要求**

### **单元测试**
- 组件渲染测试
- 功能逻辑测试
- 路由导航测试（如适用）
- 用户交互测试

### **集成测试**
- Chrome Extension API 测试
- 跨组件通信测试
- 状态同步测试

## **安全考虑要求**

### **输入验证**
- XSS 防护
- 注入攻击防护
- 数据验证
- 路由参数验证（如适用）

### **权限控制**
- 最小权限原则
- 数据隔离
- 安全存储

## **文档质量标准**

### **内容完整性**
- ✅ 所有必需章节完整
- ✅ 技术实现细节充分
- ✅ 代码示例准确
- ✅ 接口定义完整

### **格式规范性**
- ✅ Markdown 格式正确
- ✅ 代码块语法高亮
- ✅ 章节编号连续
- ✅ 术语使用一致

### **实用性要求**
- ✅ 可直接指导开发
- ✅ 示例代码可运行
- ✅ 架构设计合理
- ✅ 扩展性考虑充分

## **文件命名规范**

- 文件名格式: `task[数字]_trd.txt`
- 保存位置: `.taskmaster/docs/`
- 编码格式: UTF-8
- 换行符: LF

## **版本信息要求**

```markdown
---
**文档版本**: v1.0  
**创建日期**: YYYY-MM-DD  
**最后更新**: YYYY-MM-DD  
**负责人**: 前端开发团队
```

## **参考示例**

参考 [task2_trd.txt](mdc:.taskmaster/docs/task2_trd.txt) 作为标准模板，该文档展示了完整的 TRD 结构和内容要求。
